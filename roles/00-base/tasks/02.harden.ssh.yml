---
# https://ryaneschinger.com/blog/securing-a-server-with-ansible/

#- name: Disallow password authentication
#  lineinfile: dest=/etc/ssh/sshd_config
#              regexp="^PasswordAuthentication"
#              line="PasswordAuthentication no"
#              state=present
#  notify: restart ssh

- name: Disallow root SSH access
  lineinfile: dest=/etc/ssh/sshd_config
              regexp="^PermitRootLogin"
              line="PermitRootLogin no"
              state=present
  notify: restart ssh

- name: Ensure permissions on /etc/ssh/sshd_config are correct
  file:
    path: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: 0600
    state: file
  notify: restart ssh

- name: Ensure SSH Protocol is set to 2
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^Protocol'
    line: 'Protocol 2'
  notify: restart ssh

- name: Ensure SSH MaxAuthTries is set to 4 
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^MaxAuthTries'
    line: 'MaxAuthTries 4'
  notify: restart ssh

- name: Ensure SSH IgnoreRhosts is Enabled
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^IgnoreRhosts'
    line: 'IgnoreRhosts yes'
  notify: restart ssh


- name: Ensure Strong MAC Algorithms
  lineinfile:
    path: /etc/ssh/sshd_config
    line: 'MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com'
  notify: restart ssh

- name: Ensure Strong 'Ciphers
  lineinfile:
    path: /etc/ssh/sshd_config
    line: 'Ciphers aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr'
  notify: restart ssh

- name: Ensure Strong Key Exchange Ciphers
  lineinfile:
    path: /etc/ssh/sshd_config
    line: 'KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256'
  notify: restart ssh

- name: Ensure SSH Idle Timeout Interval is Configured 
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^{{item.name}}'
    line: '{{item.name}} {{item.value}}'
  with_items:
    - { name: 'ClientAliveInterval' , value: '300' }
    - { name: 'ClientAliveCountMax' , value: '0' }
  notify: restart ssh

- name: Ensure SSH LoginGraceTime is Set To One Minute
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^LoginGraceTime'
    line: 'LoginGraceTime 60'
  notify: restart ssh

- name: Ensure SSH Is Started & Enabled
  service:
    name: ssh
    state: started
    enabled: true